// <auto-generated />
using System;
using LocadoraDeVeiculos.Infra.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LocadoraDeVeiculos.Infra.EntityFramework.Migrations
{
    [DbContext(typeof(LocadoraDeVeiculosDBContext))]
    partial class LocadoraDeVeiculosDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LocacaoServico", b =>
                {
                    b.Property<int>("LocacoesId")
                        .HasColumnType("int");

                    b.Property<int>("ServicosId")
                        .HasColumnType("int");

                    b.HasKey("LocacoesId", "ServicosId");

                    b.HasIndex("ServicosId");

                    b.ToTable("LocacaoServico");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ClienteModule.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnh")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("EhPessoaFisica")
                        .HasColumnType("BIT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Endereco")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("RegistroUnico")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Telefone")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime?>("ValidadeCnh")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("TBCLIENTE");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.CupomModule.Cupom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("EhDescontoFixo")
                        .HasColumnType("BIT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("ParceiroId")
                        .HasColumnType("INT");

                    b.Property<int>("QtdUtilizada")
                        .HasColumnType("INT");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("DATE");

                    b.Property<double>("Valor")
                        .HasColumnType("FLOAT");

                    b.Property<double>("ValorMinimo")
                        .HasColumnType("FLOAT");

                    b.HasKey("Id");

                    b.HasIndex("ParceiroId");

                    b.ToTable("TBCUPOM_DESCONTO");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.FuncionarioModule.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("DATE");

                    b.Property<bool>("EhPessoaFisica")
                        .HasColumnType("BIT");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Endereco")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("MatriculaInterna")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("RegistroUnico")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<double>("Salario")
                        .HasColumnType("FLOAT");

                    b.Property<string>("Senha")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Telefone")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("UsuarioAcesso")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("TBFUNCIONARIO");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.GrupoDeVeiculosModule.GrupoDeVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LimiteKmControlado")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<double>("TaxaKmExcedidoControlado")
                        .HasColumnType("FLOAT");

                    b.Property<double>("TaxaPlanoControlado")
                        .HasColumnType("FLOAT");

                    b.Property<double>("TaxaPlanoDiario")
                        .HasColumnType("FLOAT");

                    b.Property<double>("TaxaPlanoLivre")
                        .HasColumnType("FLOAT");

                    b.Property<double>("TaxaPorKmDiario")
                        .HasColumnType("FLOAT");

                    b.HasKey("Id");

                    b.ToTable("TBGRUPOVEICULO");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ImagemVeiculoModule.ImagemVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("image");

                    b.Property<int?>("veiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("veiculoId");

                    b.ToTable("TBIMAGEMVEICULO");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.LocacaoModule.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteCondutorId")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteContratanteId")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("CupomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDeChegada")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DataDeSaida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPrevistaDeChegada")
                        .HasColumnType("DATE");

                    b.Property<bool>("EstaAberta")
                        .HasColumnType("BIT");

                    b.Property<int?>("FuncionarioLocadorId")
                        .HasColumnType("int");

                    b.Property<double>("PrecoDevolucao")
                        .HasColumnType("FLOAT");

                    b.Property<double>("PrecoLocacao")
                        .HasColumnType("FLOAT");

                    b.Property<string>("TipoDeSeguro")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("TipoDoPlano")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int?>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteCondutorId");

                    b.HasIndex("ClienteContratanteId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CupomId");

                    b.HasIndex("FuncionarioLocadorId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("TBLOCACAO");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ParceiroModule.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("TBPARCEIRO");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.SevicosModule.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EhTaxadoDiario")
                        .HasColumnType("BIT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<double>("Valor")
                        .HasColumnType("FLOAT");

                    b.HasKey("Id");

                    b.ToTable("TBSERVICO");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.VeiculoModule.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GrupoDeVeiculoId")
                        .HasColumnType("int");

                    b.Property<int>("ano")
                        .HasColumnType("INT");

                    b.Property<int>("capacidadePessoas")
                        .HasColumnType("INT");

                    b.Property<double>("capacidadeTanque")
                        .HasColumnType("FLOAT");

                    b.Property<string>("chassi")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("cor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("estaAlugado")
                        .HasColumnType("BIT");

                    b.Property<int?>("grupoVeiculosId")
                        .HasColumnType("int");

                    b.Property<double>("kilometragem")
                        .HasColumnType("FLOAT");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("numeroPortas")
                        .HasColumnType("INT");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("tamanhoPortaMala")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("temArCondicionado")
                        .HasColumnType("BIT");

                    b.Property<bool>("temDirecaoHidraulica")
                        .HasColumnType("BIT");

                    b.Property<bool>("temFreiosAbs")
                        .HasColumnType("BIT");

                    b.Property<string>("tipoCombustivel")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoDeVeiculoId");

                    b.HasIndex("grupoVeiculosId");

                    b.ToTable("TBVEICULO");
                });

            modelBuilder.Entity("LocacaoServico", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.LocacaoModule.Locacao", null)
                        .WithMany()
                        .HasForeignKey("LocacoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocadoraDeVeiculos.Dominio.SevicosModule.Servico", null)
                        .WithMany()
                        .HasForeignKey("ServicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.CupomModule.Cupom", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.ParceiroModule.Parceiro", "Parceiro")
                        .WithMany("Cupons")
                        .HasForeignKey("ParceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ImagemVeiculoModule.ImagemVeiculo", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.VeiculoModule.Veiculo", "veiculo")
                        .WithMany()
                        .HasForeignKey("veiculoId");

                    b.Navigation("veiculo");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.LocacaoModule.Locacao", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.ClienteModule.Cliente", "ClienteCondutor")
                        .WithMany()
                        .HasForeignKey("ClienteCondutorId");

                    b.HasOne("LocadoraDeVeiculos.Dominio.ClienteModule.Cliente", "ClienteContratante")
                        .WithMany()
                        .HasForeignKey("ClienteContratanteId");

                    b.HasOne("LocadoraDeVeiculos.Dominio.ClienteModule.Cliente", null)
                        .WithMany("Locacoes")
                        .HasForeignKey("ClienteId");

                    b.HasOne("LocadoraDeVeiculos.Dominio.CupomModule.Cupom", "Cupom")
                        .WithMany("Locacoes")
                        .HasForeignKey("CupomId");

                    b.HasOne("LocadoraDeVeiculos.Dominio.FuncionarioModule.Funcionario", "FuncionarioLocador")
                        .WithMany("Locacoes")
                        .HasForeignKey("FuncionarioLocadorId");

                    b.HasOne("LocadoraDeVeiculos.Dominio.VeiculoModule.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId");

                    b.Navigation("ClienteCondutor");

                    b.Navigation("ClienteContratante");

                    b.Navigation("Cupom");

                    b.Navigation("FuncionarioLocador");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.VeiculoModule.Veiculo", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.GrupoDeVeiculosModule.GrupoDeVeiculo", null)
                        .WithMany("Veiculos")
                        .HasForeignKey("GrupoDeVeiculoId");

                    b.HasOne("LocadoraDeVeiculos.Dominio.GrupoDeVeiculosModule.GrupoDeVeiculo", "grupoVeiculos")
                        .WithMany()
                        .HasForeignKey("grupoVeiculosId");

                    b.Navigation("grupoVeiculos");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ClienteModule.Cliente", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.CupomModule.Cupom", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.FuncionarioModule.Funcionario", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.GrupoDeVeiculosModule.GrupoDeVeiculo", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ParceiroModule.Parceiro", b =>
                {
                    b.Navigation("Cupons");
                });
#pragma warning restore 612, 618
        }
    }
}
