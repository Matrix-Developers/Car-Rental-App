// <auto-generated />
using System;
using LocadoraDeVeiculos.Infra.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LocadoraDeVeiculos.Infra.EntityFramework.Migrations
{
    [DbContext(typeof(LocadoraDeVeiculosDBContext))]
    [Migration("20211008230933_CriacaoTabela")]
    partial class CriacaoTabela
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.CupomModule.Cupom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("EhDescontoFixo")
                        .HasColumnType("BIT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("ParceiroId")
                        .HasColumnType("INT");

                    b.Property<int>("QtdUtilizada")
                        .HasColumnType("INT");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("DATE");

                    b.Property<double>("Valor")
                        .HasColumnType("FLOAT");

                    b.Property<double>("ValorMinimo")
                        .HasColumnType("FLOAT");

                    b.HasKey("Id");

                    b.HasIndex("ParceiroId");

                    b.ToTable("TBCUPOM_DESCONTO");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.GrupoDeVeiculosModule.GrupoDeVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LimiteKmControlado")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<double>("TaxaKmExcedidoControlado")
                        .HasColumnType("FLOAT");

                    b.Property<double>("TaxaPlanoControlado")
                        .HasColumnType("FLOAT");

                    b.Property<double>("TaxaPlanoDiario")
                        .HasColumnType("FLOAT");

                    b.Property<double>("TaxaPlanoLivre")
                        .HasColumnType("FLOAT");

                    b.Property<double>("TaxaPorKmDiario")
                        .HasColumnType("FLOAT");

                    b.HasKey("Id");

                    b.ToTable("TBGRUPOVEICULO");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ParceiroModule.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("TBPARCEIRO");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.VeiculoModule.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ano")
                        .HasColumnType("INT");

                    b.Property<int>("capacidadePessoas")
                        .HasColumnType("INT");

                    b.Property<double>("capacidadeTanque")
                        .HasColumnType("FLOAT");

                    b.Property<string>("chassi")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("cor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("estaAlugado")
                        .HasColumnType("BIT");

                    b.Property<int>("id_GrupoVeiculo")
                        .HasColumnType("INT");

                    b.Property<double>("kilometragem")
                        .HasColumnType("FLOAT");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("numeroPortas")
                        .HasColumnType("INT");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("tamanhoPortaMala")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("temArCondicionado")
                        .HasColumnType("BIT");

                    b.Property<bool>("temDirecaoHidraulica")
                        .HasColumnType("BIT");

                    b.Property<bool>("temFreiosAbs")
                        .HasColumnType("BIT");

                    b.Property<string>("tipoCombustivel")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("TBVEICULO");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.CupomModule.Cupom", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.ParceiroModule.Parceiro", "Parceiro")
                        .WithMany("Cupons")
                        .HasForeignKey("ParceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ParceiroModule.Parceiro", b =>
                {
                    b.Navigation("Cupons");
                });
#pragma warning restore 612, 618
        }
    }
}
